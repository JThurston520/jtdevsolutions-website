name: Website CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: HTML5 Validation
        uses: Cyb3r-Jak3/html5validator-action@v7.2.0
        with:
          root: .
          format: text
          log_level: INFO
          extra: --show-warnings

      - name: Install Stylelint
        run: |
          npm init -y
          npm install stylelint stylelint-config-standard
          
      - name: CSS Validation
        run: |
          echo '{"extends": "stylelint-config-standard"}' > .stylelintrc.json
          npx stylelint "**/*.css"
          
      - name: Check Links
        uses: lycheeverse/lychee-action@v1.8.0
        with:
          args: --verbose --no-progress './**/*.html'
          fail: true

      - name: Check File Sizes
        run: |
          echo "Checking image sizes..."
          find ./images -type f -size +500k | while read file; do
            echo "Warning: $file is larger than 500KB"
          done
          
          echo "Checking total asset sizes..."
          find . -type f \( -name "*.js" -o -name "*.css" \) -size +1M | while read file; do
            echo "Error: $file is largerger than 1MB"
            exit 1
          done

      - name: Install ESLint
        run: |
          npm install eslint
          npm init @eslint/config

      - name: Check JavaScript
        run: |
          ./node_modules/.bin/eslint . --ext .js

      - name: Upload Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: |
            ./report
            ./*.html
          retention-days: 7

  deploy:
    needs: validate
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages publish --project-name=jtdevsolutions

permissions:
  contents: read
  pages: write
  id-token: write
